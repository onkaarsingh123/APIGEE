<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="default">
    <Description/>
    <DefaultFaultRule name="generic_fault_handler">
        <Step>
            <Name>HPX_Fault_GenericFault</Name>
        </Step>
        <!-- <AlwaysEnforce>true</AlwaysEnforce> -->
    </DefaultFaultRule>
    <FaultRules>
        <!-- This is executed when an error in javascript is encountered. -->
        <FaultRule name="js_error">
            <Step>
                <Name>HPX_Fault_JSError</Name>
            </Step>
            <Condition>(JS_Error = true)</Condition>
        </FaultRule>
        <!-- This is executed when an error in javascript is encountered. -->
        <FaultRule name="target_error">
            <Step>
                <Name>HPX_Fault_TargetErrors</Name>
            </Step>
            <Condition>(flag==true)</Condition>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request/>
        <Response>
            <!--This javascript policy validates the target error response format and sets in OperationOutcome format-->
            <Step>
                <Name>HPX_ValidateTargetResponse</Name>
                <Condition>(response.status.code != 200) and (response.status.code != 201) and (response.status.code != 204)</Condition>
            </Step>
            <!--This fault policy executes if error response is not in OperationOutcome format-->
            <Step>
                <Name>HPX_RaiseFault_Generic</Name>
                <Condition>flag=="true"</Condition>
            </Step>
        </Response>
    </PreFlow>
    <Flows>
        <Flow name="fetch_pagination_data">
            <Description/>
            <Request>
                <!-- This Javascript policy sets required query parameters and remove extra  query parameters in request.-->
                <Step>
                    <Name>HPX_AssignPaginationAttributes</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>((request.verb = "GET") and (request.queryparam.stateid != null and request.queryparam.stateid != "" ))</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <HTTPTargetConnection>
        <Properties>
            <Property name="success.codes">1xx,2xx,3xx,4xx,5xx</Property>
        </Properties>
        <LoadBalancer>
            <Server name="fhirserver"/>
        </LoadBalancer>
        <Path>/{targetBaseURI}</Path>
    </HTTPTargetConnection>
</TargetEndpoint>